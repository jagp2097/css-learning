/*
    La propiedad position nos permite posicionar los elementos. Hay algunos conceptos
    que se deben conoce para entender position.

    Flujo de renderizado -> por norma general los elementos se dibujan de izquierda a derecha
    y de arriba a abajo. El punto 0,0 de los elementos, por norma general, es la esquina superior izquierda

    Espacio reservado -> es el espacio que tiene un elemento asignado en el navegador.

    Elemento posicionado -> significa que un elemento tiene la propiedad position con un valor distinto
    de "static", que es el valor que tiene esta propiedad por defecto.

    Stackin context -> contexto de apilamiento. Es el orden en el que se apilarán las cajas que se
    superponen, dentro del contenedor.

    Al posicionar un elemento se habilitan 5 propiedades que podemos utilizar para mover los 
    elementos en los tres ejes:

        top -> el elemento se moverá desde la parte superior la distancia que le hayamos
        indicando.

        right -> el elemento se moverá desde la parte derecha la distancia que le hayamos
        indicando.

        bottom -> el elemento se moverá desde la parte inferior la distancia que le hayamos 
        indicado.

        left -> el elemento se moverá desde la parte izquierda la distancia que le hayamos
        indicado.

        z-index -> nos permite mover el elemento en el contexto de apilamiento (eje z)

        NOTA: si a un elemento le declaramos la propiedad top y/o left, las propiedades
        bottom y/o right no funcionaran.

    Los posibles valores que le podemos dar a position son:

        static -> es el valor que tiene por defecto un elemento, con este valor el elemento no
        esta posicionado y no podremos moverlo.

        Relative -> el elemento mantendra su posición y medidas en el flujo de renderizado y 
        mantendra su espacio reservado. Si lo movemos lo hará usando su posición en el html como
        punto de referencia 

        Absolute -> el elemento perderá sus medidas y su espacio reservado. Si lo movemos usará el
        elemento padre posicionado como referencia. Si no tiene ninguno, usará el elemento html
        de referencia.

        Fixed -> el elemento perderá sus medidas y su espacio reservado. Si lo movemos usará el 
        elemento html de referencia, y además se quedará fijo en esa posición aunque hagamos scroll.

        Stycky -> es una mezcla de position relative y fixed. Con este tipo de posicionamiento los 
        valores top, left, bottom y right no sirven para mover el elemento, si no para indicarle en que
        punto pasará a tener un comportamiento de posicionamiento fixed, hasta llegar a ese punto se 
        comportará como si tuviera relative.

*/

* {
    box-sizing: content-box;
    background-color: rgb(96, 93, 97);
}

.box {
    width: 300px;
    height: 200px;
}

.box-sm {
    width: 90px;
    height: 75px;
}

.box-1 {
    background-color: rosybrown;
    position: relative;
    top: 80px;
    left: 665px;
    border: 5px solid rgb(92, 30, 63);
    border-radius: 180px 20px / 165px 20px;
}

.box-2 {
    background-color: deeppink;
    position: relative;
    bottom: 120px;
    left: 365px;
    border: 5px solid rgb(92, 30, 63);
    border-radius: 20px 180px / 20px 165px;
}

.box-1-op {
    background-color: rosybrown;
    border-radius: 180px 20px / 165px 20px;
    position: relative;
    bottom: 285px;
    left: 365px;
    border: 5px solid rgb(92, 30, 63);
}

.box-2-op {
    background-color: deeppink;
    position: relative;
    bottom: 500px;
    left: 665px;
    border-radius: 20px 180px / 20px 165px;
    border: 5px solid rgb(92, 30, 63);
}

.box-3 {
    background-color: rgb(70, 70, 70);
    /* position: none; */
    position: relative;
    border-radius: 90px 15px / 90px 15px;
    bottom: 216px;
    left: 673px;
    border: 5px solid rgb(212, 170, 193);
}

.box-4 {
    background-color: rgb(70, 70, 70);
    /* position: none; */
    position: relative;
    border-radius: 15px 90px / 15px 90px;
    bottom: 300px;
    left: 575px;
    border: 5px solid rgb(212, 170, 193);
}

.box-3-op {
    background-color: rgb(70, 70, 70);
    /* position: none; */
    position: relative;
    border-radius: 15px 90px / 15px 90px;
    bottom: 720px;
    left: 665px;
    border: 5px solid rgb(212, 170, 193);
}

.box-4-op {
    background-color: rgb(70, 70, 70);
    /* position: none; */
    position: relative;
    border-radius: 90px 15px / 90px 15px;
    bottom: 805px;
    left: 575px;
    border: 5px solid rgb(212, 170, 193);
}

